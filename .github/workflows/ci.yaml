on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Node Project `ecr-ecs-nest` CI on ECR

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build the application
        run: yarn build
      # - name: Lint the code
      #   run: yarn lint
      # - name: Format the code
      #   run: yarn format
      # - name: Run tests
      #   run: yarn test --watch=false --bail
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ci
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # inline-session-policy: >-
          #   {
          #     "Version": "2012-10-17",
          #     "Statement": [
          #       {
          #       "Sid":"Stmt1",
          #       "Effect":"Allow",
          #       "Action":"ecr:*",
          #       "Resource":"238975515363.dkr.ecr.eu-north-1.amazonaws.com/fozocske/sat"
          #       }
          #     ]
          #   }
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE_ASSUME }}
          role-session-name: github-session

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.AWS_ECR_REPO_NAME }}
        run: |
          IMAGE_TAG=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g')
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
